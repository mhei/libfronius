/*
 * Copyright Â© 2009-2018 Michael Heimpold <mhei@heimpold.de>
 *
 * SPDX-License-Identifier: LGPL-2.1+
 */

#ifndef _FRONIUS_VERSION_H_
#define _FRONIUS_VERSION_H_

/* The major version, (1, if %LIBFRONIUS_VERSION is 1.2.3) */
#define LIBFRONIUS_VERSION_MAJOR (@LIBFRONIUS_VERSION_MAJOR@)

/* The minor version (2, if %LIBFRONIUS_VERSION is 1.2.3) */
#define LIBFRONIUS_VERSION_MINOR (@LIBFRONIUS_VERSION_MINOR@)

/* The micro version (3, if %LIBFRONIUS_VERSION is 1.2.3) */
#define LIBFRONIUS_VERSION_MICRO (@LIBFRONIUS_VERSION_MICRO@)

/* The full version, like 1.2.3 */
#define LIBFRONIUS_VERSION        @LIBFRONIUS_VERSION@

/* The full version, in string form (suited for string concatenation) */
#define LIBFRONIUS_VERSION_STRING "@LIBFRONIUS_VERSION@"

/* Numerically encoded version, like 0x010203 */
#define LIBFRONIUS_VERSION_HEX ((LIBFRONIUS_MAJOR_VERSION << 24) |   \
                                (LIBFRONIUS_MINOR_VERSION << 16) |   \
                                (LIBFRONIUS_MICRO_VERSION << 8))

/* Evaluates to True if the version is greater than @major, @minor and @micro */
#define LIBFRONIUS_VERSION_CHECK(major,minor,micro)      \
    (LIBFRONIUS_VERSION_MAJOR > (major) ||               \
     (LIBFRONIUS_VERSION_MAJOR == (major) &&             \
      LIBFRONIUS_VERSION_MINOR > (minor)) ||             \
     (LIBFRONIUS_VERSION_MAJOR == (major) &&             \
      LIBFRONIUS_VERSION_MINOR == (minor) &&             \
      LIBFRONIUS_VERSION_MICRO >= (micro)))

#endif /* _FRONIUS_VERSION_H_ */
